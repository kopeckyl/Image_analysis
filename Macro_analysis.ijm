

// Create function to process images
function process_image(image_file) {
	open(image_file);


// Color Thresholder 2.1.0/1.53c
// Autogenerated macro, single images only!
min=newArray(3);
max=newArray(3);
filter=newArray(3);
a=getTitle();
call("ij.plugin.frame.ColorThresholder.RGBtoLab");
run("RGB Stack");
run("Convert Stack to Images");
selectWindow("Red");
rename("0");
selectWindow("Green");
rename("1");
selectWindow("Blue");
rename("2");
// Change your parameters here!
min[0]=113;
max[0]=255;
filter[0]="pass";
min[1]=0;	
max[1]=153;
filter[1]="pass";
min[2]=142;
max[2]=255;
filter[2]="pass";
for (i=0;i<3;i++){
	selectWindow(""+i);
	setThreshold(min[i], max[i]);
	run("Convert to Mask");
	if (filter[i]=="stop")  run("Invert");
}
imageCalculator("AND create", "0","1");
imageCalculator("AND create", "Result of 0","2");
for (i=0;i<3;i++){
  selectWindow(""+i);
  close();
}
	selectWindow("Result of 0");
	close();
	selectWindow("Result of Result of 0");
	rename(a);
	// Colour Thresholding-------------
	run("Analyze Particles...", "size=2-Infinity summarize");
	//Close active image
	close("*");
}


// The next line prevents ImageJ from showing the processing steps during 
// processing of a large number of images, speeding up the macro
setBatchMode(true);

// Show the user a dialog to select a directory of images
input_dir = getDirectory("Choose a Directory of images");

list = getFileList(input_dir);


//Run loop
for (i=0; i < list.length; i++) {
	showProgress(i+1, list.length);
 	process_image(list[i]);
	
}

setBatchMode(false); // Now disable BatchMode since we are finished